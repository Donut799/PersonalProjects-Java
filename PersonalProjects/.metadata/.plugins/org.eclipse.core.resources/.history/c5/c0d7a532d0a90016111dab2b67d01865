import java.io.File;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.Button;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.Tab;
import javafx.scene.input.KeyEvent;
import javafx.scene.input.MouseButton;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.Background;
import javafx.scene.layout.BackgroundFill;
import javafx.scene.layout.Border;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.BorderStroke;
import javafx.scene.layout.BorderStrokeStyle;
import javafx.scene.layout.BorderWidths;
import javafx.scene.layout.CornerRadii;
import javafx.scene.layout.FlowPane;
import javafx.scene.layout.HBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontPosture;

public class ScheduleTab extends Tab
{
	private String workingDirectory;
	private FlowPane weekFlowPane;
	private Button selectedButton = null;
	public ScheduleTab(String higherWorkingDirectory,BinarySearchTree<String,String> recipeTree)throws NotImplementedException
	{
		workingDirectory = higherWorkingDirectory + "\\Schedule";
		File testDirectory = new File(workingDirectory);
		if(!testDirectory.exists()) 
			if(!testDirectory.mkdirs())System.out.println("Failed to make directory " + workingDirectory);
		
		
		this.setText("Schedule");
			BorderPane weekLayoutPane = new BorderPane();
				ScrollPane scrollWeekPane = new ScrollPane();
				//scrollWeekPane.fitToHeightProperty();
					weekFlowPane = new FlowPane();
					weekFlowPane.setAlignment(Pos.TOP_CENTER);
					refreshWeekCount();
				scrollWeekPane.setContent(weekFlowPane);
				scrollWeekPane.setFitToWidth(true);
				HBox weekOptionPane = new HBox();
				weekOptionPane.setSpacing(2);
				weekOptionPane.setPadding(new Insets(2,2,2,2));
					Button addWeek = new Button("Add");
					addWeek.setOnMouseClicked(e -> addWeek(e));
					addWeek.setStyle("-fx-background-radius: 0");
					addWeek.setFont(Font.font("Arial", FontPosture.REGULAR, 20));
					Button editWeek = new Button("Edit");
					editWeek.setOnMouseClicked(e -> editWeek(e));
					editWeek.setStyle("-fx-background-radius: 0");
					editWeek.setFont(Font.font("Arial", FontPosture.REGULAR, 20));
					Button deleteWeek = new Button("Delete");
					deleteWeek.setOnMouseClicked(e -> deleteWeek(e));
					deleteWeek.setStyle("-fx-background-radius: 0");
					deleteWeek.setFont(Font.font("Arial", FontPosture.REGULAR, 20));
					Button openWeek = new Button("Open");
					openWeek.setOnMouseClicked(e -> openWeek(e));
					openWeek.setStyle("-fx-background-radius: 0");
					openWeek.setFont(Font.font("Arial", FontPosture.REGULAR, 20));
				weekOptionPane.setBackground(new Background(new BackgroundFill(Color.BLACK,CornerRadii.EMPTY,Insets.EMPTY)));
				weekOptionPane.getChildren().add(addWeek);
				weekOptionPane.getChildren().add(editWeek);
				weekOptionPane.getChildren().add(deleteWeek);
				weekOptionPane.getChildren().add(openWeek);
			BorderPane.setAlignment(scrollWeekPane, Pos.TOP_CENTER);
			weekLayoutPane.setBottom(weekOptionPane);
			weekLayoutPane.setCenter(scrollWeekPane);
		this.setContent(weekLayoutPane);
		this.setClosable(false);
	}
	private void weekButtonMouseHandler(MouseEvent e)
	{
		if(e.getButton().equals(MouseButton.PRIMARY))
		{
			if(e.getClickCount() == 2)
			{
				System.out.println("DoubleClick");
			}
			else if(e.getClickCount() == 1)
			{
				System.out.println("SingleClick");
				if(e.getSource() != selectedButton)
				{
					((Button)e.getSource()).setStyle("-fx-Background-color: Gray");
					if(selectedButton!=null)selectedButton.setStyle("");
				}
				selectedButton = (Button)e.getSource();
			}
			
		}
	}
	private void weekButtonKeyHandler(KeyEvent e) throws NotImplementedException
	{
		throw new NotImplementedException();
	}
	private void refreshWeekCount()
	{
		weekFlowPane.getChildren().clear();
		int howManyWeeksCreated = 1;
		do
		{
			File checkWeeks = new File(workingDirectory + "\\wk" + howManyWeeksCreated);
			if(!checkWeeks.exists())break;
			howManyWeeksCreated++;
		}while(true);
		
		
	
		for(int i = 1; i < howManyWeeksCreated; i++)
		{
			Button button = new Button("Week " + i);
			button.setMinSize(200, 200);
			button.setBorder(new Border(new BorderStroke(Color.BLACK, BorderStrokeStyle.SOLID, CornerRadii.EMPTY, new BorderWidths(2,2,2,2))));
			button.setFont(Font.font("Arial", FontPosture.REGULAR, 20));
			button.setOnMouseClicked(e -> weekButtonMouseHandler(e));
			//button.setOnKeyPressed(e -> weekButtonKeyHandler(e));
	weekFlowPane.getChildren().add(button);
		}
	}
	private void addWeek(MouseEvent e)
	{
		if(e.getButton().equals(MouseButton.PRIMARY))
		{
			
		}
		refreshWeekCount();
	}
	private void editWeek(MouseEvent e)
	{
		
	}
	private void deleteWeek(MouseEvent e)
	{
		if(e.getButton().equals(MouseButton.PRIMARY))
		{
			if(selectedButton!=null)
			{
				int week = Integer.parseInt(selectedButton.getText().substring(5));
				selectedButton = null;
				File deleteWeek = new File(workingDirectory + "\\wk" + week);
				FileMethods.deleteFileRecursive(deleteWeek);
				//move other weeks over so there isn't a gap
				do
				{
					File renamedFile = new File(workingDirectory + "\\wk" + week++);
					File testForNext = new File(workingDirectory + "\\wk" + week);
					if(testForNext.exists()) testForNext.renameTo(renamedFile);
					else break;
				}while(true);
				refreshWeekCount();
			}
		}
	}
	private void refreshWeekOptions()
	{
		
	}
	private void openWeek(MouseEvent e)
	{
		
	}
	private void setViewEditWeek(int whichWeek) throws Exception
	{
		//this.getTabPane().
		
		
		
		File file = new File(workingDirectory + "\\Schedule\\wk" + whichWeek);
		if(!file.exists())
		{
			throw new Exception("");
		}
		else
		{
			
		}
		
		
		
		//this.setContent(arg0);
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
