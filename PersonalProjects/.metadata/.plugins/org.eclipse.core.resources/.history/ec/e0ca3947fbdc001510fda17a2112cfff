/*     +────+────+────+────+
 *     |2048|2048|2048|2048|
 *     ─────────────────────
 *     |2048|2048|2048|2048|
 *     ─────────────────────
 *     |2048|2048|2048|2048|
 *     ─────────────────────
 *     |2048|2048|2048|2048|
 *     +────+────+────+────+
 * 
 * 
 * 
 * 
 */



import java.util.Scanner;


public class twentyfourtyeight
{
	static Scanner input = new Scanner(System.in);
	
	static int [][] board = new int[4][4];
	
	static int score = 0;
	
	static boolean wasd = false;
	
	static boolean won = false;
	static int counter = 0;
	

	public static void main(String[] args)
	{
		board[0][1]=2048;
		System.out.print("would you like to use W A S D rather than U D L R. Y/N: ");
		if(input.nextLine().toUpperCase().charAt(0)=='Y')
		{
			wasd = true;
		}
		System.out.print("Your choice has been saved\n");
		placeNew();
		do
		{			
			displayBoard();
			moveBoard(getInput());
			
			placeNew();
			if (didLose())
			{
				break;
			}
		}while(true);
		
		didwin();
		displayBoard();
		System.out.print("GAME OVER");
		
	}
	
	public static void displayBoard()
	{
		System.out.print("Your current score is "+score+"\n\n+────+────+────+────+\n");
		for (int i = 3 ; i>-1 ; i--)
		{
			for (int j = 0 ; j<4 ; j++)
			{
				if (board [i][j]==0)
				{
					System.out.print("|    ");
				}
				else if(board[i][j]<10)
				{
					System.out.print("| "+board[i][j]+"  ");
				}
				else if (board[i][j]<100)
				{
					System.out.print("| "+board[i][j]+" ");
				}
				else if (board[i][j]<1000)
				{
					System.out.print("|"+board[i][j]+" ");
				}
				else
				{
					System.out.print("|"+board[i][j]);
				}
			}
		System.out.print("|\n+────+────+────+────+\n");
		}
		System.out.print("\n\n");
	}
	public static char getInput()
	{
		String answer;
		
		do
		{
			if(wasd)
			{
				System.out.print("Enter w, a, s, or d: ");
				do
				{
					answer = input.nextLine().toUpperCase();
					if(answer.equals("W"))
					{
						answer = "U";
						break;
					}
					else if(answer.equals("A"))
					{
						answer = "L";
						break;
					}
					else if (answer.equals("S"))
					{
						answer = "D";
						break;
					}
					else if (answer.equals("D"))
					{
						answer = "R";
						break;
					}
					System.out.print("You did not Enter W, A, S, D: ");
				}while(true);
			}
			else
			{		
				System.out.print("Enter u, d ,l , or r: ");
				answer = input.nextLine().toUpperCase();	
			}
				
			if (answer.equals("U"))
			{
				for(int j = 0;j < 4;j++)
				{
					for( int i = 3;i > -1; i--)
					{
						if(board[i][j]==0)
						{
							for(;i>-1;i--)
							{
								if(board[i][j]>0)
								{
									return 'U';
								}
							}
						}
					}
				}
				for (int i = 0; i < 3; i++)
				{
					for (int j = 0; j < 4; j++)
					{
						if (board[i][j]!=0)
						{
							if (board[i][j]==board[i+1][j])
							{
								return 'U';
							}
						}
					}
				}
			}
			if (answer.equals("D"))
			{
				for (int j = 0; j < 4; j++)
				{
					for (int i = 0; i < 4; i++)
					{
						if (board[i][j]==0)
						{
							for(;i<4;i++)
							{
								if(board[i][j]>0)
								{
									return 'D';
								}
							}
						}
					}
				}
				for (int i = 0; i < 3; i++)
				{
					for (int j = 0; j < 4; j++)
					{
						if (board[i][j]!=0)
						{
							if (board[i][j]==board[i+1][j])
							{
								return 'D';
							}
						}
					}
				}
			}
			if (answer.equals("L"))
			{
				for (int i = 0;i<4;i++)
				{
					for (int j = 0; j < 4;j++)
					{
						if (board[i][j]==0)
						{
							for (;j<4;j++)
							{
								if (board[i][j]>0)
								{
									return 'L';
								}
							}
						}
					}
				}
				for (int i = 0; i < 4; i++)
				{
					for (int j = 0; j < 3; j++)
					{
						if (board[i][j]!=0)
						{
							if (board[i][j]==board[i][j+1])
							{
								return 'L';
							}
						}
					}
				}
			}
			if (answer.equals("R"))
			{
				for (int i = 0;i<4;i++)
				{
					for (int j = 3;j>-1;j--)
					{
						if (board[i][j]==0)
						{
							for (;j>-1;j--)
							{
								if (board[i][j]>0)
								{
									return 'R';
								}
							}
						}
					}
				}
				for (int i = 0; i < 4; i++)
				{
					for (int j = 0; j < 3; j++)
					{
						if (board[i][j]!=0)
						{
							if (board[i][j]==board[i][j+1])
							{
								return 'R';
							}
						}
					}
				}
			}
			if(answer.equals("U")||answer.equals("D")||answer.equals("L")||answer.equals("R"))
			{
				System.out.print("\nThat direction is not available\nPlease ");
				continue;
			}
			System.out.print("PLEASE ENTER U, D, L, or R!!!!");
			
		}while(true);
	
	}
	public static void placeNew()
	{
		int r;
		//pick either 4 or 2
		if((int)(10*Math.random())<9)
			r = 2;
		else
			r = 4;
		//check if board is already full
		one: 
		for (int i = 0; i < 4; i++)
		{
			for (int j = 0; j < 4; j++)
			{
				if (board[i][j]==0)
				{
					do
					{
						int a = (int)(4*Math.random());
						int b = (int)(4*Math.random());
						if (board[a][b]==0)
						{
							board[a][b] = r;
							break one;
						}
					}while(true);
				}
			}
		}
		//implied else- do nothing
	}
	public static boolean didLose()
	{
		for (int i = 0; i < 4; i++)
		{
			for (int j = 0; j < 4; j++)
			{
				if (board[i][j]==0)
				{
					return false;
				}
			}
		}
		for (int i = 0; i < 3; i++)
		{
			for (int j = 0; j < 4; j++)
			{
				if (board[i][j]==board[i+1][j]||board[j][i]==board[j][i+1])
				{
					return false;
				}
			}
		}
		
		
		
		return true;
	}
	public static void moveBoard(char move)
	{
		switch (move)
		{
		
			case 'U':
			{
				//combine like verticle numbers
				for (int j = 0; j < 4; j++)
				{
					for (int i = 3; i > -1; i--)
					{
						if(board[i][j]>0)
						{
							for (int k = i-1; k > -1; k--)
							{
								if (board[i][j] == board[k][j])
								{
									board[i][j] = 2*board[i][j];
									board[k][j] = 0;
									score+=board[i][j];
									break;
								}
								else if (board[k][j]>0)
								{
									break;
								}
							}
						}
					}
				}
				//move pieces up to fill in any blank spots.
				for (int j = 0; j < 4; j++)
				{
					for (int i = 3; i > -1; i--)
					{
						if (board[i][j]==0)
						{
							for (int k = i-1; k > -1; k--)
							{
								if (board[k][j]>0)
								{
									board[i][j]=board[k][j];
									board[k][j]=0;
									break;
											
								}
							}
						}
					}
				}
				break;
			}
			case 'D':
			{
				for (int j = 0; j < 4; j++)
				{
					for (int i = 0; i < 3; i++)
					{
						if(board[i][j]>0)
						{
							for (int k = i+1; k < 4; k++)
							{
								if (board[i][j] == board[k][j])
								{
									board[i][j] = 2*board[i][j];
									board[k][j] = 0;
									score+=board[i][j];
									break;
								}
								else if (board[k][j]>0)
								{
									break;
								}
							}
						}
					}
				}
				//move pieces down to fill in any blank spots.
				for (int j = 0; j < 4; j++)
				{
					for (int i = 0; i < 3; i++)
					{
						if (board[i][j]==0)
						{
							for (int k = i+1; k < 4; k++)
							{
								if (board[k][j]>0)
								{
									board[i][j]=board[k][j];
									board[k][j]=0;
									break;
											
								}
							}
						}
					}
				}
				break;
			}
			case 'L':
			{
				for (int i = 0; i < 4; i++)
				{
					for (int j = 0; j < 3; j++)
					{
						if(board[i][j]>0)
						{
							for (int k = j+1; k < 4; k++)
							{
								if (board[i][j] == board[i][k])
								{
									board[i][j] = 2*board[i][j];
									board[i][k] = 0;
									score+=board[i][j];
									break;
								}
								else if (board[i][k]>0)
								{
									break;
								}
							}
						}
					}
				}
				//move pieces to the left to fill in any blank spaces
				for (int i = 0; i < 4; i++)
				{
					for (int j = 0; j < 3; j++)
					{
						if (board[i][j]==0)
						{
							for (int k = j+1; k < 4; k++)
							{
								if (board[i][k]>0)
								{
									board[i][j]=board[i][k];
									board[i][k]=0;
									break;
											
								}
							}
						}
					}
				}
				break;
			}
			case 'R':
			{
				for (int i = 0; i < 4; i++)
				{
					for (int j = 3; j > -1; j--)
					{
						if(board[i][j]>0)
						{
							for (int k = j-1; k > -1; k--)
							{
								if (board[i][j] == board[i][k])
								{
									board[i][j] = 2*board[i][j];
									board[i][k] = 0;
									score+=board[i][j];
									break;
								}
								else if (board[i][k]>0)
								{
									break;
								}
							}
						}
					}
				}
				for (int i = 0; i < 4; i++)
				{
					for (int j = 3; j > -1; j--)
					{
						if (board[i][j]==0)
						{
							for (int k = j-1; k > -1; k--)
							{
								if (board[i][k]>0)
								{
									board[i][j]=board[i][k];
									board[i][k]=0;
									break;
											
								}
							}
						}
					}
				}
				break;
			}
		}
	}
	public static void didwin()
	{
		for (int i = 0; i < 4; i++)
		{
			for (int j = 0; j < 4; j++)
			{
				if (board[i][j]==2048)
				{
					
					if (counter == 0)
					{
					System.out.print("\n YOU HAVE WON!!! you can keep playing if you like however\n");
					}
					
					counter++;
					
				}
			}
		}
	}
}